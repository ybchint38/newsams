/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package panels;

import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sql.FacultySql;
import sql.SubjectSql;

/**
 *
 * @author yash
 */
public class FacultySubjectAllocation extends javax.swing.JPanel implements PanelInterface{

    //private String fid;
    private String fname;
    private FacultySql sql;
    private ArrayList<String> sCodes;
    private boolean isChanged;
    
    /**
     * Creates new form FacultySubjectAllocation
     */
    public FacultySubjectAllocation(String fid){
        initComponents();
        //this.fid=fid;
        sql=new FacultySql(fid);
        sql.setAutoCommit(false);
        fname=sql.getData()[FacultySql.FNAME];
        jLabel3.setText(fname);
        setSemester();
        setCurrentAllocation();
    }

    private void setSemester(){
        SubjectSql ssql=new SubjectSql();
        String sem[]=ssql.getCurrentSemester("MCA");
        ssql.close();
        jComboBox1.setModel(new DefaultComboBoxModel(sem));
        setSection();
        setSubjects();
    }
    
    private void setSection(){
        int sem=Integer.parseInt(jComboBox1.getSelectedItem().toString());
        SubjectSql ssql=new SubjectSql();
        String section[]=ssql.getCurrentSection("MCA", sem);
        ssql.close();
        jComboBox2.setModel(new DefaultComboBoxModel(section));
    }
    
    private void setSubjects(){
        Vector subjects=sql.getSpecializedSubject();
        //System.out.println(subjects.size());
        if(subjects!=null){
            int sem=Integer.parseInt(jComboBox1.getSelectedItem().toString());
            //String section=jComboBox2.getSelectedItem().toString();
        
            SubjectSql ssql=new SubjectSql();
            ArrayList<String> scodes=ssql.getSubjectCodes(sem);
        
            sCodes=new ArrayList<>();
            jComboBox3.removeAllItems();
            Enumeration<String> e=subjects.elements();
            String temp;
            while(e.hasMoreElements()){
                temp=e.nextElement().split(":")[0];
                if(scodes.contains(temp)){
                    sCodes.add(temp);
                    jComboBox3.addItem(ssql.getSubjectName(temp));
                }
            }
            //jComboBox3.setModel(new DefaultComboBoxModel(sCodes.toArray()));
            ssql.close();
        }
    }
    
    private void setAllocatedFaculty(){
        if(jComboBox1.getSelectedIndex()!=-1 && jComboBox2.getSelectedIndex()!=-1 && jComboBox3.getSelectedIndex()!=-1){
            String scode=sCodes.get(jComboBox3.getSelectedIndex());
            int sem=Integer.parseInt(jComboBox1.getSelectedItem().toString());
            String section=jComboBox2.getSelectedItem().toString();
            SubjectSql ssql=new SubjectSql();
            ArrayList<String[]> fids=ssql.getFacultiesFor(scode, sem, section);
            ssql.close();
            list1.removeAll();
            int n=fids.size();
            for(int i=0;i<n;i++){
                list1.add(fids.get(i)[1]);
            }
        }
    }
    
    private void setCurrentAllocation(){
        ArrayList<String[]> allot=sql.getAllotedSubject();
        DefaultTableModel tm=(DefaultTableModel) jTable1.getModel();
        int cnt=tm.getRowCount();
        for(int i=0;i<cnt;i++){
            tm.removeRow(i);
        }
        SubjectSql ssql=new SubjectSql();
        int n=allot.size();
        String temp[];
        String row[];
        for(int i=0;i<n;i++){
            temp=allot.get(i);
            /*tm.setValueAt(temp[1], i, 0);
            tm.setValueAt(temp[2], i, 1);
            tm.setValueAt(temp[3]+":"+ssql.getSubjectName(temp[3]), i, 2);*/
            row=new String[]{temp[1],temp[2],temp[3]+":"+ssql.getSubjectName(temp[3])};
            tm.addRow(row);
        }
        ssql.close();
    }
    
    private void save(){
        sql.commit();
        isChanged=false;
        JOptionPane.showMessageDialog(this, "Changes saved successfully.");
    }
    
    private void cancel(){
        sql.rollback();
        isChanged=false;
        setCurrentAllocation();
        JOptionPane.showMessageDialog(this, "All changes reverted.");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        list1 = new java.awt.List();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(FacultySubjectAllocation.class, "FacultySubjectAllocation.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(FacultySubjectAllocation.class, "FacultySubjectAllocation.jLabel2.text")); // NOI18N

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(FacultySubjectAllocation.class, "FacultySubjectAllocation.jLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(FacultySubjectAllocation.class, "FacultySubjectAllocation.jLabel4.text")); // NOI18N

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(FacultySubjectAllocation.class, "FacultySubjectAllocation.jLabel5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(FacultySubjectAllocation.class, "FacultySubjectAllocation.jLabel6.text")); // NOI18N

        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/buttonimage/Button-Add-icon16.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(FacultySubjectAllocation.class, "FacultySubjectAllocation.jButton1.text")); // NOI18N
        jButton1.setMargin(new java.awt.Insets(2, 8, 2, 8));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/buttonimage/button_delete16.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButton2, org.openide.util.NbBundle.getMessage(FacultySubjectAllocation.class, "FacultySubjectAllocation.jButton2.text")); // NOI18N
        jButton2.setMargin(new java.awt.Insets(2, 8, 2, 8));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/buttonimage/SAVE.PNG"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButton3, org.openide.util.NbBundle.getMessage(FacultySubjectAllocation.class, "FacultySubjectAllocation.jButton3.text")); // NOI18N
        jButton3.setMargin(new java.awt.Insets(2, 8, 2, 8));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/buttonimage/exit_Hover.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButton4, org.openide.util.NbBundle.getMessage(FacultySubjectAllocation.class, "FacultySubjectAllocation.jButton4.text")); // NOI18N
        jButton4.setMargin(new java.awt.Insets(2, 8, 2, 8));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Semester", "Section", "Subject"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setMinWidth(80);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(80);
        jTable1.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(FacultySubjectAllocation.class, "FacultySubjectAllocation.jTable1.columnModel.title0")); // NOI18N
        jTable1.getColumnModel().getColumn(1).setMinWidth(80);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(1).setMaxWidth(80);
        jTable1.getColumnModel().getColumn(1).setHeaderValue(org.openide.util.NbBundle.getMessage(FacultySubjectAllocation.class, "FacultySubjectAllocation.jTable1.columnModel.title1")); // NOI18N
        jTable1.getColumnModel().getColumn(2).setHeaderValue(org.openide.util.NbBundle.getMessage(FacultySubjectAllocation.class, "FacultySubjectAllocation.jTable1.columnModel.title2")); // NOI18N

        list1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(list1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jButton3)
                            .addComponent(jButton4)))
                    .addComponent(list1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        setSection();
        setSubjects();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
        setAllocatedFaculty();
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String listContent[]=list1.getItems();
        for(int i=0;i<listContent.length;i++){
            if(listContent[i].equalsIgnoreCase(fname)){
                JOptionPane.showMessageDialog(this, "Already alloted.");
                return;
            }
        }
        String scode=sCodes.get(jComboBox3.getSelectedIndex());
        String sname=jComboBox3.getSelectedItem().toString();
        int sem=Integer.parseInt(jComboBox1.getSelectedItem().toString());
        String section=jComboBox2.getSelectedItem().toString();
        sql.allotSubject("MCA", sem, section, scode);
        list1.add(fname);
        String row[]=new String[]{sem+"",section+"",scode+":"+sname};
        ((DefaultTableModel)jTable1.getModel()).addRow(row);
        isChanged=true;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int index=jTable1.getSelectedRow();
        if(index==-1){
            JOptionPane.showMessageDialog(this, "Please select subject to remove.");
            return;
        }
        int sem=Integer.parseInt(jTable1.getValueAt(index, 0).toString());
        String section=jTable1.getValueAt(index, 1).toString();
        String scode=jTable1.getValueAt(index, 2).toString().split(":")[0];        
        sql.deAllotSubject("MCA",sem, section, scode);
        isChanged=true;
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        save();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        cancel();
    }//GEN-LAST:event_jButton4ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private java.awt.List list1;
    // End of variables declaration//GEN-END:variables

    @Override
    public boolean destroy() {
        if(isChanged){
            int option=JOptionPane.showInternalConfirmDialog(this, "Do you want to save changes?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if(option==JOptionPane.YES_OPTION){
                save();
            }else{
                cancel();
            }
        }
        sql.setAutoCommit(true);
        sql.close();
        return true;
    }
}
